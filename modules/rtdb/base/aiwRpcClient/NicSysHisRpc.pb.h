// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: NicSysHisRpc.proto

#ifndef PROTOBUF_INCLUDED_NicSysHisRpc_2eproto
#define PROTOBUF_INCLUDED_NicSysHisRpc_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3006001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "NicSysRpc.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_NicSysHisRpc_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_NicSysHisRpc_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[10]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_NicSysHisRpc_2eproto();
namespace NicSys_Hisd {
class CompressInfo;
class CompressInfoDefaultTypeInternal;
extern CompressInfoDefaultTypeInternal _CompressInfo_default_instance_;
class QualityInfo;
class QualityInfoDefaultTypeInternal;
extern QualityInfoDefaultTypeInternal _QualityInfo_default_instance_;
class ReadInfo;
class ReadInfoDefaultTypeInternal;
extern ReadInfoDefaultTypeInternal _ReadInfo_default_instance_;
class TagIDPara;
class TagIDParaDefaultTypeInternal;
extern TagIDParaDefaultTypeInternal _TagIDPara_default_instance_;
class psHisParameter;
class psHisParameterDefaultTypeInternal;
extern psHisParameterDefaultTypeInternal _psHisParameter_default_instance_;
class psHisQueryParameter;
class psHisQueryParameterDefaultTypeInternal;
extern psHisQueryParameterDefaultTypeInternal _psHisQueryParameter_default_instance_;
class psHisRPCReturn;
class psHisRPCReturnDefaultTypeInternal;
extern psHisRPCReturnDefaultTypeInternal _psHisRPCReturn_default_instance_;
class psHisWriteParameter;
class psHisWriteParameterDefaultTypeInternal;
extern psHisWriteParameterDefaultTypeInternal _psHisWriteParameter_default_instance_;
class psTagHisData;
class psTagHisDataDefaultTypeInternal;
extern psTagHisDataDefaultTypeInternal _psTagHisData_default_instance_;
class psTagListHisData;
class psTagListHisDataDefaultTypeInternal;
extern psTagListHisDataDefaultTypeInternal _psTagListHisData_default_instance_;
}  // namespace NicSys_Hisd
namespace google {
namespace protobuf {
template<> ::NicSys_Hisd::CompressInfo* Arena::CreateMaybeMessage<::NicSys_Hisd::CompressInfo>(Arena*);
template<> ::NicSys_Hisd::QualityInfo* Arena::CreateMaybeMessage<::NicSys_Hisd::QualityInfo>(Arena*);
template<> ::NicSys_Hisd::ReadInfo* Arena::CreateMaybeMessage<::NicSys_Hisd::ReadInfo>(Arena*);
template<> ::NicSys_Hisd::TagIDPara* Arena::CreateMaybeMessage<::NicSys_Hisd::TagIDPara>(Arena*);
template<> ::NicSys_Hisd::psHisParameter* Arena::CreateMaybeMessage<::NicSys_Hisd::psHisParameter>(Arena*);
template<> ::NicSys_Hisd::psHisQueryParameter* Arena::CreateMaybeMessage<::NicSys_Hisd::psHisQueryParameter>(Arena*);
template<> ::NicSys_Hisd::psHisRPCReturn* Arena::CreateMaybeMessage<::NicSys_Hisd::psHisRPCReturn>(Arena*);
template<> ::NicSys_Hisd::psHisWriteParameter* Arena::CreateMaybeMessage<::NicSys_Hisd::psHisWriteParameter>(Arena*);
template<> ::NicSys_Hisd::psTagHisData* Arena::CreateMaybeMessage<::NicSys_Hisd::psTagHisData>(Arena*);
template<> ::NicSys_Hisd::psTagListHisData* Arena::CreateMaybeMessage<::NicSys_Hisd::psTagListHisData>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace NicSys_Hisd {

enum HisCompressMode {
  Compress_Undefined = 0,
  Compress_NoCompress = 1,
  Compress_change = 2,
  Compress_DeadBand = 3,
  Compress_Swing = 4,
  HisCompressMode_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  HisCompressMode_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool HisCompressMode_IsValid(int value);
const HisCompressMode HisCompressMode_MIN = Compress_Undefined;
const HisCompressMode HisCompressMode_MAX = Compress_Swing;
const int HisCompressMode_ARRAYSIZE = HisCompressMode_MAX + 1;

const ::google::protobuf::EnumDescriptor* HisCompressMode_descriptor();
inline const ::std::string& HisCompressMode_Name(HisCompressMode value) {
  return ::google::protobuf::internal::NameOfEnum(
    HisCompressMode_descriptor(), value);
}
inline bool HisCompressMode_Parse(
    const ::std::string& name, HisCompressMode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<HisCompressMode>(
    HisCompressMode_descriptor(), name, value);
}
// ===================================================================

class QualityInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NicSys_Hisd.QualityInfo) */ {
 public:
  QualityInfo();
  virtual ~QualityInfo();

  QualityInfo(const QualityInfo& from);

  inline QualityInfo& operator=(const QualityInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QualityInfo(QualityInfo&& from) noexcept
    : QualityInfo() {
    *this = ::std::move(from);
  }

  inline QualityInfo& operator=(QualityInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const QualityInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QualityInfo* internal_default_instance() {
    return reinterpret_cast<const QualityInfo*>(
               &_QualityInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(QualityInfo* other);
  friend void swap(QualityInfo& a, QualityInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QualityInfo* New() const final {
    return CreateMaybeMessage<QualityInfo>(nullptr);
  }

  QualityInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<QualityInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const QualityInfo& from);
  void MergeFrom(const QualityInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QualityInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 q = 1;
  void clear_q();
  static const int kQFieldNumber = 1;
  ::google::protobuf::int32 q() const;
  void set_q(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NicSys_Hisd.QualityInfo)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 q_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_NicSysHisRpc_2eproto;
};
// -------------------------------------------------------------------

class ReadInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NicSys_Hisd.ReadInfo) */ {
 public:
  ReadInfo();
  virtual ~ReadInfo();

  ReadInfo(const ReadInfo& from);

  inline ReadInfo& operator=(const ReadInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReadInfo(ReadInfo&& from) noexcept
    : ReadInfo() {
    *this = ::std::move(from);
  }

  inline ReadInfo& operator=(ReadInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ReadInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReadInfo* internal_default_instance() {
    return reinterpret_cast<const ReadInfo*>(
               &_ReadInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(ReadInfo* other);
  friend void swap(ReadInfo& a, ReadInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReadInfo* New() const final {
    return CreateMaybeMessage<ReadInfo>(nullptr);
  }

  ReadInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ReadInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ReadInfo& from);
  void MergeFrom(const ReadInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReadInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 nFileID = 1;
  void clear_nfileid();
  static const int kNFileIDFieldNumber = 1;
  ::google::protobuf::int32 nfileid() const;
  void set_nfileid(::google::protobuf::int32 value);

  // int32 nIndexPageNum = 2;
  void clear_nindexpagenum();
  static const int kNIndexPageNumFieldNumber = 2;
  ::google::protobuf::int32 nindexpagenum() const;
  void set_nindexpagenum(::google::protobuf::int32 value);

  // int32 nIndexItem = 3;
  void clear_nindexitem();
  static const int kNIndexItemFieldNumber = 3;
  ::google::protobuf::int32 nindexitem() const;
  void set_nindexitem(::google::protobuf::int32 value);

  // int32 nDataPageNum = 4;
  void clear_ndatapagenum();
  static const int kNDataPageNumFieldNumber = 4;
  ::google::protobuf::int32 ndatapagenum() const;
  void set_ndatapagenum(::google::protobuf::int32 value);

  // int32 nIsInsertData = 5;
  void clear_nisinsertdata();
  static const int kNIsInsertDataFieldNumber = 5;
  ::google::protobuf::int32 nisinsertdata() const;
  void set_nisinsertdata(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NicSys_Hisd.ReadInfo)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 nfileid_;
  ::google::protobuf::int32 nindexpagenum_;
  ::google::protobuf::int32 nindexitem_;
  ::google::protobuf::int32 ndatapagenum_;
  ::google::protobuf::int32 nisinsertdata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_NicSysHisRpc_2eproto;
};
// -------------------------------------------------------------------

class CompressInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NicSys_Hisd.CompressInfo) */ {
 public:
  CompressInfo();
  virtual ~CompressInfo();

  CompressInfo(const CompressInfo& from);

  inline CompressInfo& operator=(const CompressInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CompressInfo(CompressInfo&& from) noexcept
    : CompressInfo() {
    *this = ::std::move(from);
  }

  inline CompressInfo& operator=(CompressInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CompressInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CompressInfo* internal_default_instance() {
    return reinterpret_cast<const CompressInfo*>(
               &_CompressInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(CompressInfo* other);
  friend void swap(CompressInfo& a, CompressInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CompressInfo* New() const final {
    return CreateMaybeMessage<CompressInfo>(nullptr);
  }

  CompressInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CompressInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CompressInfo& from);
  void MergeFrom(const CompressInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CompressInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .NicSys_Hisd.psData pLastSave = 7;
  bool has_plastsave() const;
  void clear_plastsave();
  static const int kPLastSaveFieldNumber = 7;
  const ::NicSys_Hisd::psData& plastsave() const;
  ::NicSys_Hisd::psData* release_plastsave();
  ::NicSys_Hisd::psData* mutable_plastsave();
  void set_allocated_plastsave(::NicSys_Hisd::psData* plastsave);

  // .NicSys_Hisd.psData pLast = 8;
  bool has_plast() const;
  void clear_plast();
  static const int kPLastFieldNumber = 8;
  const ::NicSys_Hisd::psData& plast() const;
  ::NicSys_Hisd::psData* release_plast();
  ::NicSys_Hisd::psData* mutable_plast();
  void set_allocated_plast(::NicSys_Hisd::psData* plast);

  // double fCompressRate = 2;
  void clear_fcompressrate();
  static const int kFCompressRateFieldNumber = 2;
  double fcompressrate() const;
  void set_fcompressrate(double value);

  // double fTopSlope = 3;
  void clear_ftopslope();
  static const int kFTopSlopeFieldNumber = 3;
  double ftopslope() const;
  void set_ftopslope(double value);

  // int32 nTagID = 1;
  void clear_ntagid();
  static const int kNTagIDFieldNumber = 1;
  ::google::protobuf::int32 ntagid() const;
  void set_ntagid(::google::protobuf::int32 value);

  // int32 nMaxSaveTime = 5;
  void clear_nmaxsavetime();
  static const int kNMaxSaveTimeFieldNumber = 5;
  ::google::protobuf::int32 nmaxsavetime() const;
  void set_nmaxsavetime(::google::protobuf::int32 value);

  // double fBottomSlope = 4;
  void clear_fbottomslope();
  static const int kFBottomSlopeFieldNumber = 4;
  double fbottomslope() const;
  void set_fbottomslope(double value);

  // int32 nPointCount = 6;
  void clear_npointcount();
  static const int kNPointCountFieldNumber = 6;
  ::google::protobuf::int32 npointcount() const;
  void set_npointcount(::google::protobuf::int32 value);

  // int32 nFileID = 9;
  void clear_nfileid();
  static const int kNFileIDFieldNumber = 9;
  ::google::protobuf::int32 nfileid() const;
  void set_nfileid(::google::protobuf::int32 value);

  // int32 nIndexPageNum = 10;
  void clear_nindexpagenum();
  static const int kNIndexPageNumFieldNumber = 10;
  ::google::protobuf::int32 nindexpagenum() const;
  void set_nindexpagenum(::google::protobuf::int32 value);

  // int32 nDataPageNum = 11;
  void clear_ndatapagenum();
  static const int kNDataPageNumFieldNumber = 11;
  ::google::protobuf::int32 ndatapagenum() const;
  void set_ndatapagenum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NicSys_Hisd.CompressInfo)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::NicSys_Hisd::psData* plastsave_;
  ::NicSys_Hisd::psData* plast_;
  double fcompressrate_;
  double ftopslope_;
  ::google::protobuf::int32 ntagid_;
  ::google::protobuf::int32 nmaxsavetime_;
  double fbottomslope_;
  ::google::protobuf::int32 npointcount_;
  ::google::protobuf::int32 nfileid_;
  ::google::protobuf::int32 nindexpagenum_;
  ::google::protobuf::int32 ndatapagenum_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_NicSysHisRpc_2eproto;
};
// -------------------------------------------------------------------

class TagIDPara : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NicSys_Hisd.TagIDPara) */ {
 public:
  TagIDPara();
  virtual ~TagIDPara();

  TagIDPara(const TagIDPara& from);

  inline TagIDPara& operator=(const TagIDPara& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TagIDPara(TagIDPara&& from) noexcept
    : TagIDPara() {
    *this = ::std::move(from);
  }

  inline TagIDPara& operator=(TagIDPara&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const TagIDPara& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TagIDPara* internal_default_instance() {
    return reinterpret_cast<const TagIDPara*>(
               &_TagIDPara_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(TagIDPara* other);
  friend void swap(TagIDPara& a, TagIDPara& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TagIDPara* New() const final {
    return CreateMaybeMessage<TagIDPara>(nullptr);
  }

  TagIDPara* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TagIDPara>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TagIDPara& from);
  void MergeFrom(const TagIDPara& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TagIDPara* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .NicSys_Hisd.CompressInfo pCompress = 1;
  bool has_pcompress() const;
  void clear_pcompress();
  static const int kPCompressFieldNumber = 1;
  const ::NicSys_Hisd::CompressInfo& pcompress() const;
  ::NicSys_Hisd::CompressInfo* release_pcompress();
  ::NicSys_Hisd::CompressInfo* mutable_pcompress();
  void set_allocated_pcompress(::NicSys_Hisd::CompressInfo* pcompress);

  // .NicSys_Hisd.ReadInfo pReadInfo = 2;
  bool has_preadinfo() const;
  void clear_preadinfo();
  static const int kPReadInfoFieldNumber = 2;
  const ::NicSys_Hisd::ReadInfo& preadinfo() const;
  ::NicSys_Hisd::ReadInfo* release_preadinfo();
  ::NicSys_Hisd::ReadInfo* mutable_preadinfo();
  void set_allocated_preadinfo(::NicSys_Hisd::ReadInfo* preadinfo);

  // @@protoc_insertion_point(class_scope:NicSys_Hisd.TagIDPara)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::NicSys_Hisd::CompressInfo* pcompress_;
  ::NicSys_Hisd::ReadInfo* preadinfo_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_NicSysHisRpc_2eproto;
};
// -------------------------------------------------------------------

class psHisParameter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NicSys_Hisd.psHisParameter) */ {
 public:
  psHisParameter();
  virtual ~psHisParameter();

  psHisParameter(const psHisParameter& from);

  inline psHisParameter& operator=(const psHisParameter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  psHisParameter(psHisParameter&& from) noexcept
    : psHisParameter() {
    *this = ::std::move(from);
  }

  inline psHisParameter& operator=(psHisParameter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const psHisParameter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const psHisParameter* internal_default_instance() {
    return reinterpret_cast<const psHisParameter*>(
               &_psHisParameter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(psHisParameter* other);
  friend void swap(psHisParameter& a, psHisParameter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline psHisParameter* New() const final {
    return CreateMaybeMessage<psHisParameter>(nullptr);
  }

  psHisParameter* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<psHisParameter>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const psHisParameter& from);
  void MergeFrom(const psHisParameter& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(psHisParameter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .NicSys_Hisd.psTime ValidTime = 5;
  bool has_validtime() const;
  void clear_validtime();
  static const int kValidTimeFieldNumber = 5;
  const ::NicSys_Hisd::psTime& validtime() const;
  ::NicSys_Hisd::psTime* release_validtime();
  ::NicSys_Hisd::psTime* mutable_validtime();
  void set_allocated_validtime(::NicSys_Hisd::psTime* validtime);

  // int32 nTagID = 1;
  void clear_ntagid();
  static const int kNTagIDFieldNumber = 1;
  ::google::protobuf::int32 ntagid() const;
  void set_ntagid(::google::protobuf::int32 value);

  // .NicSys_Hisd.psDataTypeEnum DataType = 2;
  void clear_datatype();
  static const int kDataTypeFieldNumber = 2;
  ::NicSys_Hisd::psDataTypeEnum datatype() const;
  void set_datatype(::NicSys_Hisd::psDataTypeEnum value);

  // double fCompressRate = 4;
  void clear_fcompressrate();
  static const int kFCompressRateFieldNumber = 4;
  double fcompressrate() const;
  void set_fcompressrate(double value);

  // int32 nMaxSaveTime = 3;
  void clear_nmaxsavetime();
  static const int kNMaxSaveTimeFieldNumber = 3;
  ::google::protobuf::int32 nmaxsavetime() const;
  void set_nmaxsavetime(::google::protobuf::int32 value);

  // bool bIsSave = 6;
  void clear_bissave();
  static const int kBIsSaveFieldNumber = 6;
  bool bissave() const;
  void set_bissave(bool value);

  // bool bIsDeleted = 7;
  void clear_bisdeleted();
  static const int kBIsDeletedFieldNumber = 7;
  bool bisdeleted() const;
  void set_bisdeleted(bool value);

  // .NicSys_Hisd.HisCompressMode CompressMode = 8;
  void clear_compressmode();
  static const int kCompressModeFieldNumber = 8;
  ::NicSys_Hisd::HisCompressMode compressmode() const;
  void set_compressmode(::NicSys_Hisd::HisCompressMode value);

  // @@protoc_insertion_point(class_scope:NicSys_Hisd.psHisParameter)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::NicSys_Hisd::psTime* validtime_;
  ::google::protobuf::int32 ntagid_;
  int datatype_;
  double fcompressrate_;
  ::google::protobuf::int32 nmaxsavetime_;
  bool bissave_;
  bool bisdeleted_;
  int compressmode_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_NicSysHisRpc_2eproto;
};
// -------------------------------------------------------------------

class psTagHisData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NicSys_Hisd.psTagHisData) */ {
 public:
  psTagHisData();
  virtual ~psTagHisData();

  psTagHisData(const psTagHisData& from);

  inline psTagHisData& operator=(const psTagHisData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  psTagHisData(psTagHisData&& from) noexcept
    : psTagHisData() {
    *this = ::std::move(from);
  }

  inline psTagHisData& operator=(psTagHisData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const psTagHisData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const psTagHisData* internal_default_instance() {
    return reinterpret_cast<const psTagHisData*>(
               &_psTagHisData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(psTagHisData* other);
  friend void swap(psTagHisData& a, psTagHisData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline psTagHisData* New() const final {
    return CreateMaybeMessage<psTagHisData>(nullptr);
  }

  psTagHisData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<psTagHisData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const psTagHisData& from);
  void MergeFrom(const psTagHisData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(psTagHisData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .NicSys_Hisd.psData DataList = 3;
  int datalist_size() const;
  void clear_datalist();
  static const int kDataListFieldNumber = 3;
  ::NicSys_Hisd::psData* mutable_datalist(int index);
  ::google::protobuf::RepeatedPtrField< ::NicSys_Hisd::psData >*
      mutable_datalist();
  const ::NicSys_Hisd::psData& datalist(int index) const;
  ::NicSys_Hisd::psData* add_datalist();
  const ::google::protobuf::RepeatedPtrField< ::NicSys_Hisd::psData >&
      datalist() const;

  // int32 TagId = 1;
  void clear_tagid();
  static const int kTagIdFieldNumber = 1;
  ::google::protobuf::int32 tagid() const;
  void set_tagid(::google::protobuf::int32 value);

  // int32 DataCount = 2;
  void clear_datacount();
  static const int kDataCountFieldNumber = 2;
  ::google::protobuf::int32 datacount() const;
  void set_datacount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NicSys_Hisd.psTagHisData)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::NicSys_Hisd::psData > datalist_;
  ::google::protobuf::int32 tagid_;
  ::google::protobuf::int32 datacount_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_NicSysHisRpc_2eproto;
};
// -------------------------------------------------------------------

class psTagListHisData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NicSys_Hisd.psTagListHisData) */ {
 public:
  psTagListHisData();
  virtual ~psTagListHisData();

  psTagListHisData(const psTagListHisData& from);

  inline psTagListHisData& operator=(const psTagListHisData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  psTagListHisData(psTagListHisData&& from) noexcept
    : psTagListHisData() {
    *this = ::std::move(from);
  }

  inline psTagListHisData& operator=(psTagListHisData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const psTagListHisData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const psTagListHisData* internal_default_instance() {
    return reinterpret_cast<const psTagListHisData*>(
               &_psTagListHisData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(psTagListHisData* other);
  friend void swap(psTagListHisData& a, psTagListHisData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline psTagListHisData* New() const final {
    return CreateMaybeMessage<psTagListHisData>(nullptr);
  }

  psTagListHisData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<psTagListHisData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const psTagListHisData& from);
  void MergeFrom(const psTagListHisData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(psTagListHisData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .NicSys_Hisd.psTagHisData TagListHisData = 2;
  int taglisthisdata_size() const;
  void clear_taglisthisdata();
  static const int kTagListHisDataFieldNumber = 2;
  ::NicSys_Hisd::psTagHisData* mutable_taglisthisdata(int index);
  ::google::protobuf::RepeatedPtrField< ::NicSys_Hisd::psTagHisData >*
      mutable_taglisthisdata();
  const ::NicSys_Hisd::psTagHisData& taglisthisdata(int index) const;
  ::NicSys_Hisd::psTagHisData* add_taglisthisdata();
  const ::google::protobuf::RepeatedPtrField< ::NicSys_Hisd::psTagHisData >&
      taglisthisdata() const;

  // int32 TagCount = 1;
  void clear_tagcount();
  static const int kTagCountFieldNumber = 1;
  ::google::protobuf::int32 tagcount() const;
  void set_tagcount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NicSys_Hisd.psTagListHisData)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::NicSys_Hisd::psTagHisData > taglisthisdata_;
  ::google::protobuf::int32 tagcount_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_NicSysHisRpc_2eproto;
};
// -------------------------------------------------------------------

class psHisWriteParameter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NicSys_Hisd.psHisWriteParameter) */ {
 public:
  psHisWriteParameter();
  virtual ~psHisWriteParameter();

  psHisWriteParameter(const psHisWriteParameter& from);

  inline psHisWriteParameter& operator=(const psHisWriteParameter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  psHisWriteParameter(psHisWriteParameter&& from) noexcept
    : psHisWriteParameter() {
    *this = ::std::move(from);
  }

  inline psHisWriteParameter& operator=(psHisWriteParameter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const psHisWriteParameter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const psHisWriteParameter* internal_default_instance() {
    return reinterpret_cast<const psHisWriteParameter*>(
               &_psHisWriteParameter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(psHisWriteParameter* other);
  friend void swap(psHisWriteParameter& a, psHisWriteParameter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline psHisWriteParameter* New() const final {
    return CreateMaybeMessage<psHisWriteParameter>(nullptr);
  }

  psHisWriteParameter* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<psHisWriteParameter>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const psHisWriteParameter& from);
  void MergeFrom(const psHisWriteParameter& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(psHisWriteParameter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .NicSys_Hisd.psTagHisData pTagHisData = 2;
  int ptaghisdata_size() const;
  void clear_ptaghisdata();
  static const int kPTagHisDataFieldNumber = 2;
  ::NicSys_Hisd::psTagHisData* mutable_ptaghisdata(int index);
  ::google::protobuf::RepeatedPtrField< ::NicSys_Hisd::psTagHisData >*
      mutable_ptaghisdata();
  const ::NicSys_Hisd::psTagHisData& ptaghisdata(int index) const;
  ::NicSys_Hisd::psTagHisData* add_ptaghisdata();
  const ::google::protobuf::RepeatedPtrField< ::NicSys_Hisd::psTagHisData >&
      ptaghisdata() const;

  // .NicSys_Hisd.psDataField Fields = 1;
  bool has_fields() const;
  void clear_fields();
  static const int kFieldsFieldNumber = 1;
  const ::NicSys_Hisd::psDataField& fields() const;
  ::NicSys_Hisd::psDataField* release_fields();
  ::NicSys_Hisd::psDataField* mutable_fields();
  void set_allocated_fields(::NicSys_Hisd::psDataField* fields);

  // @@protoc_insertion_point(class_scope:NicSys_Hisd.psHisWriteParameter)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::NicSys_Hisd::psTagHisData > ptaghisdata_;
  ::NicSys_Hisd::psDataField* fields_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_NicSysHisRpc_2eproto;
};
// -------------------------------------------------------------------

class psHisRPCReturn : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NicSys_Hisd.psHisRPCReturn) */ {
 public:
  psHisRPCReturn();
  virtual ~psHisRPCReturn();

  psHisRPCReturn(const psHisRPCReturn& from);

  inline psHisRPCReturn& operator=(const psHisRPCReturn& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  psHisRPCReturn(psHisRPCReturn&& from) noexcept
    : psHisRPCReturn() {
    *this = ::std::move(from);
  }

  inline psHisRPCReturn& operator=(psHisRPCReturn&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const psHisRPCReturn& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const psHisRPCReturn* internal_default_instance() {
    return reinterpret_cast<const psHisRPCReturn*>(
               &_psHisRPCReturn_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(psHisRPCReturn* other);
  friend void swap(psHisRPCReturn& a, psHisRPCReturn& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline psHisRPCReturn* New() const final {
    return CreateMaybeMessage<psHisRPCReturn>(nullptr);
  }

  psHisRPCReturn* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<psHisRPCReturn>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const psHisRPCReturn& from);
  void MergeFrom(const psHisRPCReturn& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(psHisRPCReturn* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // sint32 apiStatus = 1;
  void clear_apistatus();
  static const int kApiStatusFieldNumber = 1;
  ::google::protobuf::int32 apistatus() const;
  void set_apistatus(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NicSys_Hisd.psHisRPCReturn)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 apistatus_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_NicSysHisRpc_2eproto;
};
// -------------------------------------------------------------------

class psHisQueryParameter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NicSys_Hisd.psHisQueryParameter) */ {
 public:
  psHisQueryParameter();
  virtual ~psHisQueryParameter();

  psHisQueryParameter(const psHisQueryParameter& from);

  inline psHisQueryParameter& operator=(const psHisQueryParameter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  psHisQueryParameter(psHisQueryParameter&& from) noexcept
    : psHisQueryParameter() {
    *this = ::std::move(from);
  }

  inline psHisQueryParameter& operator=(psHisQueryParameter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const psHisQueryParameter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const psHisQueryParameter* internal_default_instance() {
    return reinterpret_cast<const psHisQueryParameter*>(
               &_psHisQueryParameter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(psHisQueryParameter* other);
  friend void swap(psHisQueryParameter& a, psHisQueryParameter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline psHisQueryParameter* New() const final {
    return CreateMaybeMessage<psHisQueryParameter>(nullptr);
  }

  psHisQueryParameter* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<psHisQueryParameter>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const psHisQueryParameter& from);
  void MergeFrom(const psHisQueryParameter& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(psHisQueryParameter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .NicSys_Hisd.psTagListHisData pTagHisData = 2;
  int ptaghisdata_size() const;
  void clear_ptaghisdata();
  static const int kPTagHisDataFieldNumber = 2;
  ::NicSys_Hisd::psTagListHisData* mutable_ptaghisdata(int index);
  ::google::protobuf::RepeatedPtrField< ::NicSys_Hisd::psTagListHisData >*
      mutable_ptaghisdata();
  const ::NicSys_Hisd::psTagListHisData& ptaghisdata(int index) const;
  ::NicSys_Hisd::psTagListHisData* add_ptaghisdata();
  const ::google::protobuf::RepeatedPtrField< ::NicSys_Hisd::psTagListHisData >&
      ptaghisdata() const;

  // .NicSys_Hisd.psDataField Fields = 1;
  bool has_fields() const;
  void clear_fields();
  static const int kFieldsFieldNumber = 1;
  const ::NicSys_Hisd::psDataField& fields() const;
  ::NicSys_Hisd::psDataField* release_fields();
  ::NicSys_Hisd::psDataField* mutable_fields();
  void set_allocated_fields(::NicSys_Hisd::psDataField* fields);

  // @@protoc_insertion_point(class_scope:NicSys_Hisd.psHisQueryParameter)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::NicSys_Hisd::psTagListHisData > ptaghisdata_;
  ::NicSys_Hisd::psDataField* fields_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_NicSysHisRpc_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// QualityInfo

// int32 q = 1;
inline void QualityInfo::clear_q() {
  q_ = 0;
}
inline ::google::protobuf::int32 QualityInfo::q() const {
  // @@protoc_insertion_point(field_get:NicSys_Hisd.QualityInfo.q)
  return q_;
}
inline void QualityInfo::set_q(::google::protobuf::int32 value) {
  
  q_ = value;
  // @@protoc_insertion_point(field_set:NicSys_Hisd.QualityInfo.q)
}

// -------------------------------------------------------------------

// ReadInfo

// int32 nFileID = 1;
inline void ReadInfo::clear_nfileid() {
  nfileid_ = 0;
}
inline ::google::protobuf::int32 ReadInfo::nfileid() const {
  // @@protoc_insertion_point(field_get:NicSys_Hisd.ReadInfo.nFileID)
  return nfileid_;
}
inline void ReadInfo::set_nfileid(::google::protobuf::int32 value) {
  
  nfileid_ = value;
  // @@protoc_insertion_point(field_set:NicSys_Hisd.ReadInfo.nFileID)
}

// int32 nIndexPageNum = 2;
inline void ReadInfo::clear_nindexpagenum() {
  nindexpagenum_ = 0;
}
inline ::google::protobuf::int32 ReadInfo::nindexpagenum() const {
  // @@protoc_insertion_point(field_get:NicSys_Hisd.ReadInfo.nIndexPageNum)
  return nindexpagenum_;
}
inline void ReadInfo::set_nindexpagenum(::google::protobuf::int32 value) {
  
  nindexpagenum_ = value;
  // @@protoc_insertion_point(field_set:NicSys_Hisd.ReadInfo.nIndexPageNum)
}

// int32 nIndexItem = 3;
inline void ReadInfo::clear_nindexitem() {
  nindexitem_ = 0;
}
inline ::google::protobuf::int32 ReadInfo::nindexitem() const {
  // @@protoc_insertion_point(field_get:NicSys_Hisd.ReadInfo.nIndexItem)
  return nindexitem_;
}
inline void ReadInfo::set_nindexitem(::google::protobuf::int32 value) {
  
  nindexitem_ = value;
  // @@protoc_insertion_point(field_set:NicSys_Hisd.ReadInfo.nIndexItem)
}

// int32 nDataPageNum = 4;
inline void ReadInfo::clear_ndatapagenum() {
  ndatapagenum_ = 0;
}
inline ::google::protobuf::int32 ReadInfo::ndatapagenum() const {
  // @@protoc_insertion_point(field_get:NicSys_Hisd.ReadInfo.nDataPageNum)
  return ndatapagenum_;
}
inline void ReadInfo::set_ndatapagenum(::google::protobuf::int32 value) {
  
  ndatapagenum_ = value;
  // @@protoc_insertion_point(field_set:NicSys_Hisd.ReadInfo.nDataPageNum)
}

// int32 nIsInsertData = 5;
inline void ReadInfo::clear_nisinsertdata() {
  nisinsertdata_ = 0;
}
inline ::google::protobuf::int32 ReadInfo::nisinsertdata() const {
  // @@protoc_insertion_point(field_get:NicSys_Hisd.ReadInfo.nIsInsertData)
  return nisinsertdata_;
}
inline void ReadInfo::set_nisinsertdata(::google::protobuf::int32 value) {
  
  nisinsertdata_ = value;
  // @@protoc_insertion_point(field_set:NicSys_Hisd.ReadInfo.nIsInsertData)
}

// -------------------------------------------------------------------

// CompressInfo

// int32 nTagID = 1;
inline void CompressInfo::clear_ntagid() {
  ntagid_ = 0;
}
inline ::google::protobuf::int32 CompressInfo::ntagid() const {
  // @@protoc_insertion_point(field_get:NicSys_Hisd.CompressInfo.nTagID)
  return ntagid_;
}
inline void CompressInfo::set_ntagid(::google::protobuf::int32 value) {
  
  ntagid_ = value;
  // @@protoc_insertion_point(field_set:NicSys_Hisd.CompressInfo.nTagID)
}

// double fCompressRate = 2;
inline void CompressInfo::clear_fcompressrate() {
  fcompressrate_ = 0;
}
inline double CompressInfo::fcompressrate() const {
  // @@protoc_insertion_point(field_get:NicSys_Hisd.CompressInfo.fCompressRate)
  return fcompressrate_;
}
inline void CompressInfo::set_fcompressrate(double value) {
  
  fcompressrate_ = value;
  // @@protoc_insertion_point(field_set:NicSys_Hisd.CompressInfo.fCompressRate)
}

// double fTopSlope = 3;
inline void CompressInfo::clear_ftopslope() {
  ftopslope_ = 0;
}
inline double CompressInfo::ftopslope() const {
  // @@protoc_insertion_point(field_get:NicSys_Hisd.CompressInfo.fTopSlope)
  return ftopslope_;
}
inline void CompressInfo::set_ftopslope(double value) {
  
  ftopslope_ = value;
  // @@protoc_insertion_point(field_set:NicSys_Hisd.CompressInfo.fTopSlope)
}

// double fBottomSlope = 4;
inline void CompressInfo::clear_fbottomslope() {
  fbottomslope_ = 0;
}
inline double CompressInfo::fbottomslope() const {
  // @@protoc_insertion_point(field_get:NicSys_Hisd.CompressInfo.fBottomSlope)
  return fbottomslope_;
}
inline void CompressInfo::set_fbottomslope(double value) {
  
  fbottomslope_ = value;
  // @@protoc_insertion_point(field_set:NicSys_Hisd.CompressInfo.fBottomSlope)
}

// int32 nMaxSaveTime = 5;
inline void CompressInfo::clear_nmaxsavetime() {
  nmaxsavetime_ = 0;
}
inline ::google::protobuf::int32 CompressInfo::nmaxsavetime() const {
  // @@protoc_insertion_point(field_get:NicSys_Hisd.CompressInfo.nMaxSaveTime)
  return nmaxsavetime_;
}
inline void CompressInfo::set_nmaxsavetime(::google::protobuf::int32 value) {
  
  nmaxsavetime_ = value;
  // @@protoc_insertion_point(field_set:NicSys_Hisd.CompressInfo.nMaxSaveTime)
}

// int32 nPointCount = 6;
inline void CompressInfo::clear_npointcount() {
  npointcount_ = 0;
}
inline ::google::protobuf::int32 CompressInfo::npointcount() const {
  // @@protoc_insertion_point(field_get:NicSys_Hisd.CompressInfo.nPointCount)
  return npointcount_;
}
inline void CompressInfo::set_npointcount(::google::protobuf::int32 value) {
  
  npointcount_ = value;
  // @@protoc_insertion_point(field_set:NicSys_Hisd.CompressInfo.nPointCount)
}

// .NicSys_Hisd.psData pLastSave = 7;
inline bool CompressInfo::has_plastsave() const {
  return this != internal_default_instance() && plastsave_ != nullptr;
}
inline const ::NicSys_Hisd::psData& CompressInfo::plastsave() const {
  const ::NicSys_Hisd::psData* p = plastsave_;
  // @@protoc_insertion_point(field_get:NicSys_Hisd.CompressInfo.pLastSave)
  return p != nullptr ? *p : *reinterpret_cast<const ::NicSys_Hisd::psData*>(
      &::NicSys_Hisd::_psData_default_instance_);
}
inline ::NicSys_Hisd::psData* CompressInfo::release_plastsave() {
  // @@protoc_insertion_point(field_release:NicSys_Hisd.CompressInfo.pLastSave)
  
  ::NicSys_Hisd::psData* temp = plastsave_;
  plastsave_ = nullptr;
  return temp;
}
inline ::NicSys_Hisd::psData* CompressInfo::mutable_plastsave() {
  
  if (plastsave_ == nullptr) {
    auto* p = CreateMaybeMessage<::NicSys_Hisd::psData>(GetArenaNoVirtual());
    plastsave_ = p;
  }
  // @@protoc_insertion_point(field_mutable:NicSys_Hisd.CompressInfo.pLastSave)
  return plastsave_;
}
inline void CompressInfo::set_allocated_plastsave(::NicSys_Hisd::psData* plastsave) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(plastsave_);
  }
  if (plastsave) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      plastsave = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, plastsave, submessage_arena);
    }
    
  } else {
    
  }
  plastsave_ = plastsave;
  // @@protoc_insertion_point(field_set_allocated:NicSys_Hisd.CompressInfo.pLastSave)
}

// .NicSys_Hisd.psData pLast = 8;
inline bool CompressInfo::has_plast() const {
  return this != internal_default_instance() && plast_ != nullptr;
}
inline const ::NicSys_Hisd::psData& CompressInfo::plast() const {
  const ::NicSys_Hisd::psData* p = plast_;
  // @@protoc_insertion_point(field_get:NicSys_Hisd.CompressInfo.pLast)
  return p != nullptr ? *p : *reinterpret_cast<const ::NicSys_Hisd::psData*>(
      &::NicSys_Hisd::_psData_default_instance_);
}
inline ::NicSys_Hisd::psData* CompressInfo::release_plast() {
  // @@protoc_insertion_point(field_release:NicSys_Hisd.CompressInfo.pLast)
  
  ::NicSys_Hisd::psData* temp = plast_;
  plast_ = nullptr;
  return temp;
}
inline ::NicSys_Hisd::psData* CompressInfo::mutable_plast() {
  
  if (plast_ == nullptr) {
    auto* p = CreateMaybeMessage<::NicSys_Hisd::psData>(GetArenaNoVirtual());
    plast_ = p;
  }
  // @@protoc_insertion_point(field_mutable:NicSys_Hisd.CompressInfo.pLast)
  return plast_;
}
inline void CompressInfo::set_allocated_plast(::NicSys_Hisd::psData* plast) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(plast_);
  }
  if (plast) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      plast = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, plast, submessage_arena);
    }
    
  } else {
    
  }
  plast_ = plast;
  // @@protoc_insertion_point(field_set_allocated:NicSys_Hisd.CompressInfo.pLast)
}

// int32 nFileID = 9;
inline void CompressInfo::clear_nfileid() {
  nfileid_ = 0;
}
inline ::google::protobuf::int32 CompressInfo::nfileid() const {
  // @@protoc_insertion_point(field_get:NicSys_Hisd.CompressInfo.nFileID)
  return nfileid_;
}
inline void CompressInfo::set_nfileid(::google::protobuf::int32 value) {
  
  nfileid_ = value;
  // @@protoc_insertion_point(field_set:NicSys_Hisd.CompressInfo.nFileID)
}

// int32 nIndexPageNum = 10;
inline void CompressInfo::clear_nindexpagenum() {
  nindexpagenum_ = 0;
}
inline ::google::protobuf::int32 CompressInfo::nindexpagenum() const {
  // @@protoc_insertion_point(field_get:NicSys_Hisd.CompressInfo.nIndexPageNum)
  return nindexpagenum_;
}
inline void CompressInfo::set_nindexpagenum(::google::protobuf::int32 value) {
  
  nindexpagenum_ = value;
  // @@protoc_insertion_point(field_set:NicSys_Hisd.CompressInfo.nIndexPageNum)
}

// int32 nDataPageNum = 11;
inline void CompressInfo::clear_ndatapagenum() {
  ndatapagenum_ = 0;
}
inline ::google::protobuf::int32 CompressInfo::ndatapagenum() const {
  // @@protoc_insertion_point(field_get:NicSys_Hisd.CompressInfo.nDataPageNum)
  return ndatapagenum_;
}
inline void CompressInfo::set_ndatapagenum(::google::protobuf::int32 value) {
  
  ndatapagenum_ = value;
  // @@protoc_insertion_point(field_set:NicSys_Hisd.CompressInfo.nDataPageNum)
}

// -------------------------------------------------------------------

// TagIDPara

// .NicSys_Hisd.CompressInfo pCompress = 1;
inline bool TagIDPara::has_pcompress() const {
  return this != internal_default_instance() && pcompress_ != nullptr;
}
inline void TagIDPara::clear_pcompress() {
  if (GetArenaNoVirtual() == nullptr && pcompress_ != nullptr) {
    delete pcompress_;
  }
  pcompress_ = nullptr;
}
inline const ::NicSys_Hisd::CompressInfo& TagIDPara::pcompress() const {
  const ::NicSys_Hisd::CompressInfo* p = pcompress_;
  // @@protoc_insertion_point(field_get:NicSys_Hisd.TagIDPara.pCompress)
  return p != nullptr ? *p : *reinterpret_cast<const ::NicSys_Hisd::CompressInfo*>(
      &::NicSys_Hisd::_CompressInfo_default_instance_);
}
inline ::NicSys_Hisd::CompressInfo* TagIDPara::release_pcompress() {
  // @@protoc_insertion_point(field_release:NicSys_Hisd.TagIDPara.pCompress)
  
  ::NicSys_Hisd::CompressInfo* temp = pcompress_;
  pcompress_ = nullptr;
  return temp;
}
inline ::NicSys_Hisd::CompressInfo* TagIDPara::mutable_pcompress() {
  
  if (pcompress_ == nullptr) {
    auto* p = CreateMaybeMessage<::NicSys_Hisd::CompressInfo>(GetArenaNoVirtual());
    pcompress_ = p;
  }
  // @@protoc_insertion_point(field_mutable:NicSys_Hisd.TagIDPara.pCompress)
  return pcompress_;
}
inline void TagIDPara::set_allocated_pcompress(::NicSys_Hisd::CompressInfo* pcompress) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete pcompress_;
  }
  if (pcompress) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      pcompress = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pcompress, submessage_arena);
    }
    
  } else {
    
  }
  pcompress_ = pcompress;
  // @@protoc_insertion_point(field_set_allocated:NicSys_Hisd.TagIDPara.pCompress)
}

// .NicSys_Hisd.ReadInfo pReadInfo = 2;
inline bool TagIDPara::has_preadinfo() const {
  return this != internal_default_instance() && preadinfo_ != nullptr;
}
inline void TagIDPara::clear_preadinfo() {
  if (GetArenaNoVirtual() == nullptr && preadinfo_ != nullptr) {
    delete preadinfo_;
  }
  preadinfo_ = nullptr;
}
inline const ::NicSys_Hisd::ReadInfo& TagIDPara::preadinfo() const {
  const ::NicSys_Hisd::ReadInfo* p = preadinfo_;
  // @@protoc_insertion_point(field_get:NicSys_Hisd.TagIDPara.pReadInfo)
  return p != nullptr ? *p : *reinterpret_cast<const ::NicSys_Hisd::ReadInfo*>(
      &::NicSys_Hisd::_ReadInfo_default_instance_);
}
inline ::NicSys_Hisd::ReadInfo* TagIDPara::release_preadinfo() {
  // @@protoc_insertion_point(field_release:NicSys_Hisd.TagIDPara.pReadInfo)
  
  ::NicSys_Hisd::ReadInfo* temp = preadinfo_;
  preadinfo_ = nullptr;
  return temp;
}
inline ::NicSys_Hisd::ReadInfo* TagIDPara::mutable_preadinfo() {
  
  if (preadinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::NicSys_Hisd::ReadInfo>(GetArenaNoVirtual());
    preadinfo_ = p;
  }
  // @@protoc_insertion_point(field_mutable:NicSys_Hisd.TagIDPara.pReadInfo)
  return preadinfo_;
}
inline void TagIDPara::set_allocated_preadinfo(::NicSys_Hisd::ReadInfo* preadinfo) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete preadinfo_;
  }
  if (preadinfo) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      preadinfo = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, preadinfo, submessage_arena);
    }
    
  } else {
    
  }
  preadinfo_ = preadinfo;
  // @@protoc_insertion_point(field_set_allocated:NicSys_Hisd.TagIDPara.pReadInfo)
}

// -------------------------------------------------------------------

// psHisParameter

// int32 nTagID = 1;
inline void psHisParameter::clear_ntagid() {
  ntagid_ = 0;
}
inline ::google::protobuf::int32 psHisParameter::ntagid() const {
  // @@protoc_insertion_point(field_get:NicSys_Hisd.psHisParameter.nTagID)
  return ntagid_;
}
inline void psHisParameter::set_ntagid(::google::protobuf::int32 value) {
  
  ntagid_ = value;
  // @@protoc_insertion_point(field_set:NicSys_Hisd.psHisParameter.nTagID)
}

// .NicSys_Hisd.psDataTypeEnum DataType = 2;
inline void psHisParameter::clear_datatype() {
  datatype_ = 0;
}
inline ::NicSys_Hisd::psDataTypeEnum psHisParameter::datatype() const {
  // @@protoc_insertion_point(field_get:NicSys_Hisd.psHisParameter.DataType)
  return static_cast< ::NicSys_Hisd::psDataTypeEnum >(datatype_);
}
inline void psHisParameter::set_datatype(::NicSys_Hisd::psDataTypeEnum value) {
  
  datatype_ = value;
  // @@protoc_insertion_point(field_set:NicSys_Hisd.psHisParameter.DataType)
}

// int32 nMaxSaveTime = 3;
inline void psHisParameter::clear_nmaxsavetime() {
  nmaxsavetime_ = 0;
}
inline ::google::protobuf::int32 psHisParameter::nmaxsavetime() const {
  // @@protoc_insertion_point(field_get:NicSys_Hisd.psHisParameter.nMaxSaveTime)
  return nmaxsavetime_;
}
inline void psHisParameter::set_nmaxsavetime(::google::protobuf::int32 value) {
  
  nmaxsavetime_ = value;
  // @@protoc_insertion_point(field_set:NicSys_Hisd.psHisParameter.nMaxSaveTime)
}

// double fCompressRate = 4;
inline void psHisParameter::clear_fcompressrate() {
  fcompressrate_ = 0;
}
inline double psHisParameter::fcompressrate() const {
  // @@protoc_insertion_point(field_get:NicSys_Hisd.psHisParameter.fCompressRate)
  return fcompressrate_;
}
inline void psHisParameter::set_fcompressrate(double value) {
  
  fcompressrate_ = value;
  // @@protoc_insertion_point(field_set:NicSys_Hisd.psHisParameter.fCompressRate)
}

// .NicSys_Hisd.psTime ValidTime = 5;
inline bool psHisParameter::has_validtime() const {
  return this != internal_default_instance() && validtime_ != nullptr;
}
inline const ::NicSys_Hisd::psTime& psHisParameter::validtime() const {
  const ::NicSys_Hisd::psTime* p = validtime_;
  // @@protoc_insertion_point(field_get:NicSys_Hisd.psHisParameter.ValidTime)
  return p != nullptr ? *p : *reinterpret_cast<const ::NicSys_Hisd::psTime*>(
      &::NicSys_Hisd::_psTime_default_instance_);
}
inline ::NicSys_Hisd::psTime* psHisParameter::release_validtime() {
  // @@protoc_insertion_point(field_release:NicSys_Hisd.psHisParameter.ValidTime)
  
  ::NicSys_Hisd::psTime* temp = validtime_;
  validtime_ = nullptr;
  return temp;
}
inline ::NicSys_Hisd::psTime* psHisParameter::mutable_validtime() {
  
  if (validtime_ == nullptr) {
    auto* p = CreateMaybeMessage<::NicSys_Hisd::psTime>(GetArenaNoVirtual());
    validtime_ = p;
  }
  // @@protoc_insertion_point(field_mutable:NicSys_Hisd.psHisParameter.ValidTime)
  return validtime_;
}
inline void psHisParameter::set_allocated_validtime(::NicSys_Hisd::psTime* validtime) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(validtime_);
  }
  if (validtime) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      validtime = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, validtime, submessage_arena);
    }
    
  } else {
    
  }
  validtime_ = validtime;
  // @@protoc_insertion_point(field_set_allocated:NicSys_Hisd.psHisParameter.ValidTime)
}

// bool bIsSave = 6;
inline void psHisParameter::clear_bissave() {
  bissave_ = false;
}
inline bool psHisParameter::bissave() const {
  // @@protoc_insertion_point(field_get:NicSys_Hisd.psHisParameter.bIsSave)
  return bissave_;
}
inline void psHisParameter::set_bissave(bool value) {
  
  bissave_ = value;
  // @@protoc_insertion_point(field_set:NicSys_Hisd.psHisParameter.bIsSave)
}

// bool bIsDeleted = 7;
inline void psHisParameter::clear_bisdeleted() {
  bisdeleted_ = false;
}
inline bool psHisParameter::bisdeleted() const {
  // @@protoc_insertion_point(field_get:NicSys_Hisd.psHisParameter.bIsDeleted)
  return bisdeleted_;
}
inline void psHisParameter::set_bisdeleted(bool value) {
  
  bisdeleted_ = value;
  // @@protoc_insertion_point(field_set:NicSys_Hisd.psHisParameter.bIsDeleted)
}

// .NicSys_Hisd.HisCompressMode CompressMode = 8;
inline void psHisParameter::clear_compressmode() {
  compressmode_ = 0;
}
inline ::NicSys_Hisd::HisCompressMode psHisParameter::compressmode() const {
  // @@protoc_insertion_point(field_get:NicSys_Hisd.psHisParameter.CompressMode)
  return static_cast< ::NicSys_Hisd::HisCompressMode >(compressmode_);
}
inline void psHisParameter::set_compressmode(::NicSys_Hisd::HisCompressMode value) {
  
  compressmode_ = value;
  // @@protoc_insertion_point(field_set:NicSys_Hisd.psHisParameter.CompressMode)
}

// -------------------------------------------------------------------

// psTagHisData

// int32 TagId = 1;
inline void psTagHisData::clear_tagid() {
  tagid_ = 0;
}
inline ::google::protobuf::int32 psTagHisData::tagid() const {
  // @@protoc_insertion_point(field_get:NicSys_Hisd.psTagHisData.TagId)
  return tagid_;
}
inline void psTagHisData::set_tagid(::google::protobuf::int32 value) {
  
  tagid_ = value;
  // @@protoc_insertion_point(field_set:NicSys_Hisd.psTagHisData.TagId)
}

// int32 DataCount = 2;
inline void psTagHisData::clear_datacount() {
  datacount_ = 0;
}
inline ::google::protobuf::int32 psTagHisData::datacount() const {
  // @@protoc_insertion_point(field_get:NicSys_Hisd.psTagHisData.DataCount)
  return datacount_;
}
inline void psTagHisData::set_datacount(::google::protobuf::int32 value) {
  
  datacount_ = value;
  // @@protoc_insertion_point(field_set:NicSys_Hisd.psTagHisData.DataCount)
}

// repeated .NicSys_Hisd.psData DataList = 3;
inline int psTagHisData::datalist_size() const {
  return datalist_.size();
}
inline ::NicSys_Hisd::psData* psTagHisData::mutable_datalist(int index) {
  // @@protoc_insertion_point(field_mutable:NicSys_Hisd.psTagHisData.DataList)
  return datalist_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::NicSys_Hisd::psData >*
psTagHisData::mutable_datalist() {
  // @@protoc_insertion_point(field_mutable_list:NicSys_Hisd.psTagHisData.DataList)
  return &datalist_;
}
inline const ::NicSys_Hisd::psData& psTagHisData::datalist(int index) const {
  // @@protoc_insertion_point(field_get:NicSys_Hisd.psTagHisData.DataList)
  return datalist_.Get(index);
}
inline ::NicSys_Hisd::psData* psTagHisData::add_datalist() {
  // @@protoc_insertion_point(field_add:NicSys_Hisd.psTagHisData.DataList)
  return datalist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::NicSys_Hisd::psData >&
psTagHisData::datalist() const {
  // @@protoc_insertion_point(field_list:NicSys_Hisd.psTagHisData.DataList)
  return datalist_;
}

// -------------------------------------------------------------------

// psTagListHisData

// int32 TagCount = 1;
inline void psTagListHisData::clear_tagcount() {
  tagcount_ = 0;
}
inline ::google::protobuf::int32 psTagListHisData::tagcount() const {
  // @@protoc_insertion_point(field_get:NicSys_Hisd.psTagListHisData.TagCount)
  return tagcount_;
}
inline void psTagListHisData::set_tagcount(::google::protobuf::int32 value) {
  
  tagcount_ = value;
  // @@protoc_insertion_point(field_set:NicSys_Hisd.psTagListHisData.TagCount)
}

// repeated .NicSys_Hisd.psTagHisData TagListHisData = 2;
inline int psTagListHisData::taglisthisdata_size() const {
  return taglisthisdata_.size();
}
inline void psTagListHisData::clear_taglisthisdata() {
  taglisthisdata_.Clear();
}
inline ::NicSys_Hisd::psTagHisData* psTagListHisData::mutable_taglisthisdata(int index) {
  // @@protoc_insertion_point(field_mutable:NicSys_Hisd.psTagListHisData.TagListHisData)
  return taglisthisdata_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::NicSys_Hisd::psTagHisData >*
psTagListHisData::mutable_taglisthisdata() {
  // @@protoc_insertion_point(field_mutable_list:NicSys_Hisd.psTagListHisData.TagListHisData)
  return &taglisthisdata_;
}
inline const ::NicSys_Hisd::psTagHisData& psTagListHisData::taglisthisdata(int index) const {
  // @@protoc_insertion_point(field_get:NicSys_Hisd.psTagListHisData.TagListHisData)
  return taglisthisdata_.Get(index);
}
inline ::NicSys_Hisd::psTagHisData* psTagListHisData::add_taglisthisdata() {
  // @@protoc_insertion_point(field_add:NicSys_Hisd.psTagListHisData.TagListHisData)
  return taglisthisdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::NicSys_Hisd::psTagHisData >&
psTagListHisData::taglisthisdata() const {
  // @@protoc_insertion_point(field_list:NicSys_Hisd.psTagListHisData.TagListHisData)
  return taglisthisdata_;
}

// -------------------------------------------------------------------

// psHisWriteParameter

// .NicSys_Hisd.psDataField Fields = 1;
inline bool psHisWriteParameter::has_fields() const {
  return this != internal_default_instance() && fields_ != nullptr;
}
inline const ::NicSys_Hisd::psDataField& psHisWriteParameter::fields() const {
  const ::NicSys_Hisd::psDataField* p = fields_;
  // @@protoc_insertion_point(field_get:NicSys_Hisd.psHisWriteParameter.Fields)
  return p != nullptr ? *p : *reinterpret_cast<const ::NicSys_Hisd::psDataField*>(
      &::NicSys_Hisd::_psDataField_default_instance_);
}
inline ::NicSys_Hisd::psDataField* psHisWriteParameter::release_fields() {
  // @@protoc_insertion_point(field_release:NicSys_Hisd.psHisWriteParameter.Fields)
  
  ::NicSys_Hisd::psDataField* temp = fields_;
  fields_ = nullptr;
  return temp;
}
inline ::NicSys_Hisd::psDataField* psHisWriteParameter::mutable_fields() {
  
  if (fields_ == nullptr) {
    auto* p = CreateMaybeMessage<::NicSys_Hisd::psDataField>(GetArenaNoVirtual());
    fields_ = p;
  }
  // @@protoc_insertion_point(field_mutable:NicSys_Hisd.psHisWriteParameter.Fields)
  return fields_;
}
inline void psHisWriteParameter::set_allocated_fields(::NicSys_Hisd::psDataField* fields) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(fields_);
  }
  if (fields) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      fields = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, fields, submessage_arena);
    }
    
  } else {
    
  }
  fields_ = fields;
  // @@protoc_insertion_point(field_set_allocated:NicSys_Hisd.psHisWriteParameter.Fields)
}

// repeated .NicSys_Hisd.psTagHisData pTagHisData = 2;
inline int psHisWriteParameter::ptaghisdata_size() const {
  return ptaghisdata_.size();
}
inline void psHisWriteParameter::clear_ptaghisdata() {
  ptaghisdata_.Clear();
}
inline ::NicSys_Hisd::psTagHisData* psHisWriteParameter::mutable_ptaghisdata(int index) {
  // @@protoc_insertion_point(field_mutable:NicSys_Hisd.psHisWriteParameter.pTagHisData)
  return ptaghisdata_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::NicSys_Hisd::psTagHisData >*
psHisWriteParameter::mutable_ptaghisdata() {
  // @@protoc_insertion_point(field_mutable_list:NicSys_Hisd.psHisWriteParameter.pTagHisData)
  return &ptaghisdata_;
}
inline const ::NicSys_Hisd::psTagHisData& psHisWriteParameter::ptaghisdata(int index) const {
  // @@protoc_insertion_point(field_get:NicSys_Hisd.psHisWriteParameter.pTagHisData)
  return ptaghisdata_.Get(index);
}
inline ::NicSys_Hisd::psTagHisData* psHisWriteParameter::add_ptaghisdata() {
  // @@protoc_insertion_point(field_add:NicSys_Hisd.psHisWriteParameter.pTagHisData)
  return ptaghisdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::NicSys_Hisd::psTagHisData >&
psHisWriteParameter::ptaghisdata() const {
  // @@protoc_insertion_point(field_list:NicSys_Hisd.psHisWriteParameter.pTagHisData)
  return ptaghisdata_;
}

// -------------------------------------------------------------------

// psHisRPCReturn

// sint32 apiStatus = 1;
inline void psHisRPCReturn::clear_apistatus() {
  apistatus_ = 0;
}
inline ::google::protobuf::int32 psHisRPCReturn::apistatus() const {
  // @@protoc_insertion_point(field_get:NicSys_Hisd.psHisRPCReturn.apiStatus)
  return apistatus_;
}
inline void psHisRPCReturn::set_apistatus(::google::protobuf::int32 value) {
  
  apistatus_ = value;
  // @@protoc_insertion_point(field_set:NicSys_Hisd.psHisRPCReturn.apiStatus)
}

// -------------------------------------------------------------------

// psHisQueryParameter

// .NicSys_Hisd.psDataField Fields = 1;
inline bool psHisQueryParameter::has_fields() const {
  return this != internal_default_instance() && fields_ != nullptr;
}
inline const ::NicSys_Hisd::psDataField& psHisQueryParameter::fields() const {
  const ::NicSys_Hisd::psDataField* p = fields_;
  // @@protoc_insertion_point(field_get:NicSys_Hisd.psHisQueryParameter.Fields)
  return p != nullptr ? *p : *reinterpret_cast<const ::NicSys_Hisd::psDataField*>(
      &::NicSys_Hisd::_psDataField_default_instance_);
}
inline ::NicSys_Hisd::psDataField* psHisQueryParameter::release_fields() {
  // @@protoc_insertion_point(field_release:NicSys_Hisd.psHisQueryParameter.Fields)
  
  ::NicSys_Hisd::psDataField* temp = fields_;
  fields_ = nullptr;
  return temp;
}
inline ::NicSys_Hisd::psDataField* psHisQueryParameter::mutable_fields() {
  
  if (fields_ == nullptr) {
    auto* p = CreateMaybeMessage<::NicSys_Hisd::psDataField>(GetArenaNoVirtual());
    fields_ = p;
  }
  // @@protoc_insertion_point(field_mutable:NicSys_Hisd.psHisQueryParameter.Fields)
  return fields_;
}
inline void psHisQueryParameter::set_allocated_fields(::NicSys_Hisd::psDataField* fields) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(fields_);
  }
  if (fields) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      fields = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, fields, submessage_arena);
    }
    
  } else {
    
  }
  fields_ = fields;
  // @@protoc_insertion_point(field_set_allocated:NicSys_Hisd.psHisQueryParameter.Fields)
}

// repeated .NicSys_Hisd.psTagListHisData pTagHisData = 2;
inline int psHisQueryParameter::ptaghisdata_size() const {
  return ptaghisdata_.size();
}
inline void psHisQueryParameter::clear_ptaghisdata() {
  ptaghisdata_.Clear();
}
inline ::NicSys_Hisd::psTagListHisData* psHisQueryParameter::mutable_ptaghisdata(int index) {
  // @@protoc_insertion_point(field_mutable:NicSys_Hisd.psHisQueryParameter.pTagHisData)
  return ptaghisdata_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::NicSys_Hisd::psTagListHisData >*
psHisQueryParameter::mutable_ptaghisdata() {
  // @@protoc_insertion_point(field_mutable_list:NicSys_Hisd.psHisQueryParameter.pTagHisData)
  return &ptaghisdata_;
}
inline const ::NicSys_Hisd::psTagListHisData& psHisQueryParameter::ptaghisdata(int index) const {
  // @@protoc_insertion_point(field_get:NicSys_Hisd.psHisQueryParameter.pTagHisData)
  return ptaghisdata_.Get(index);
}
inline ::NicSys_Hisd::psTagListHisData* psHisQueryParameter::add_ptaghisdata() {
  // @@protoc_insertion_point(field_add:NicSys_Hisd.psHisQueryParameter.pTagHisData)
  return ptaghisdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::NicSys_Hisd::psTagListHisData >&
psHisQueryParameter::ptaghisdata() const {
  // @@protoc_insertion_point(field_list:NicSys_Hisd.psHisQueryParameter.pTagHisData)
  return ptaghisdata_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace NicSys_Hisd

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::NicSys_Hisd::HisCompressMode> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::NicSys_Hisd::HisCompressMode>() {
  return ::NicSys_Hisd::HisCompressMode_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_NicSysHisRpc_2eproto
