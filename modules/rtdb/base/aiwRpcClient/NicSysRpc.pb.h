// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: NicSysRpc.proto

#ifndef PROTOBUF_INCLUDED_NicSysRpc_2eproto
#define PROTOBUF_INCLUDED_NicSysRpc_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3006001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_NicSysRpc_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_NicSysRpc_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_NicSysRpc_2eproto();
namespace NicSys_Hisd {
class psData;
class psDataDefaultTypeInternal;
extern psDataDefaultTypeInternal _psData_default_instance_;
class psDataField;
class psDataFieldDefaultTypeInternal;
extern psDataFieldDefaultTypeInternal _psDataField_default_instance_;
class psTime;
class psTimeDefaultTypeInternal;
extern psTimeDefaultTypeInternal _psTime_default_instance_;
class psVariant;
class psVariantDefaultTypeInternal;
extern psVariantDefaultTypeInternal _psVariant_default_instance_;
}  // namespace NicSys_Hisd
namespace google {
namespace protobuf {
template<> ::NicSys_Hisd::psData* Arena::CreateMaybeMessage<::NicSys_Hisd::psData>(Arena*);
template<> ::NicSys_Hisd::psDataField* Arena::CreateMaybeMessage<::NicSys_Hisd::psDataField>(Arena*);
template<> ::NicSys_Hisd::psTime* Arena::CreateMaybeMessage<::NicSys_Hisd::psTime>(Arena*);
template<> ::NicSys_Hisd::psVariant* Arena::CreateMaybeMessage<::NicSys_Hisd::psVariant>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace NicSys_Hisd {

enum psDataTypeEnum {
  psDataType_Empty = 0,
  psDataType_Bool = 1,
  psDataType_Int8 = 2,
  psDataType_UInt8 = 3,
  psDataType_Int16 = 4,
  psDataType_UInt16 = 5,
  psDataType_Int32 = 6,
  psDataType_UInt32 = 7,
  psDataType_Int64 = 8,
  psDataType_UInt64 = 9,
  psDataType_Float = 10,
  psDataType_Double = 11,
  psDataType_Time = 12,
  psDataType_AnsiString = 13,
  psDataType_UnicodeString = 14,
  psDataType_String = 15,
  psDataType_Blob = 16,
  psDataType_Max = 17,
  psDataTypeEnum_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  psDataTypeEnum_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool psDataTypeEnum_IsValid(int value);
const psDataTypeEnum psDataTypeEnum_MIN = psDataType_Empty;
const psDataTypeEnum psDataTypeEnum_MAX = psDataType_Max;
const int psDataTypeEnum_ARRAYSIZE = psDataTypeEnum_MAX + 1;

const ::google::protobuf::EnumDescriptor* psDataTypeEnum_descriptor();
inline const ::std::string& psDataTypeEnum_Name(psDataTypeEnum value) {
  return ::google::protobuf::internal::NameOfEnum(
    psDataTypeEnum_descriptor(), value);
}
inline bool psDataTypeEnum_Parse(
    const ::std::string& name, psDataTypeEnum* value) {
  return ::google::protobuf::internal::ParseNamedEnum<psDataTypeEnum>(
    psDataTypeEnum_descriptor(), name, value);
}
// ===================================================================

class psTime : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NicSys_Hisd.psTime) */ {
 public:
  psTime();
  virtual ~psTime();

  psTime(const psTime& from);

  inline psTime& operator=(const psTime& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  psTime(psTime&& from) noexcept
    : psTime() {
    *this = ::std::move(from);
  }

  inline psTime& operator=(psTime&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const psTime& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const psTime* internal_default_instance() {
    return reinterpret_cast<const psTime*>(
               &_psTime_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(psTime* other);
  friend void swap(psTime& a, psTime& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline psTime* New() const final {
    return CreateMaybeMessage<psTime>(nullptr);
  }

  psTime* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<psTime>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const psTime& from);
  void MergeFrom(const psTime& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(psTime* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 Second = 1;
  void clear_second();
  static const int kSecondFieldNumber = 1;
  ::google::protobuf::int32 second() const;
  void set_second(::google::protobuf::int32 value);

  // int32 Millisec = 2;
  void clear_millisec();
  static const int kMillisecFieldNumber = 2;
  ::google::protobuf::int32 millisec() const;
  void set_millisec(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NicSys_Hisd.psTime)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 second_;
  ::google::protobuf::int32 millisec_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_NicSysRpc_2eproto;
};
// -------------------------------------------------------------------

class psVariant : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NicSys_Hisd.psVariant) */ {
 public:
  psVariant();
  virtual ~psVariant();

  psVariant(const psVariant& from);

  inline psVariant& operator=(const psVariant& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  psVariant(psVariant&& from) noexcept
    : psVariant() {
    *this = ::std::move(from);
  }

  inline psVariant& operator=(psVariant&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const psVariant& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const psVariant* internal_default_instance() {
    return reinterpret_cast<const psVariant*>(
               &_psVariant_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(psVariant* other);
  friend void swap(psVariant& a, psVariant& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline psVariant* New() const final {
    return CreateMaybeMessage<psVariant>(nullptr);
  }

  psVariant* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<psVariant>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const psVariant& from);
  void MergeFrom(const psVariant& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(psVariant* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .NicSys_Hisd.psTime Time = 13;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 13;
  const ::NicSys_Hisd::psTime& time() const;
  ::NicSys_Hisd::psTime* release_time();
  ::NicSys_Hisd::psTime* mutable_time();
  void set_allocated_time(::NicSys_Hisd::psTime* time);

  // .NicSys_Hisd.psDataTypeEnum DataType = 1;
  void clear_datatype();
  static const int kDataTypeFieldNumber = 1;
  ::NicSys_Hisd::psDataTypeEnum datatype() const;
  void set_datatype(::NicSys_Hisd::psDataTypeEnum value);

  // int32 Bool = 2;
  void clear_bool_();
  static const int kBoolFieldNumber = 2;
  ::google::protobuf::int32 bool_() const;
  void set_bool_(::google::protobuf::int32 value);

  // sint32 Int8 = 3;
  void clear_int8();
  static const int kInt8FieldNumber = 3;
  ::google::protobuf::int32 int8() const;
  void set_int8(::google::protobuf::int32 value);

  // int32 UInt8 = 4;
  void clear_uint8();
  static const int kUInt8FieldNumber = 4;
  ::google::protobuf::int32 uint8() const;
  void set_uint8(::google::protobuf::int32 value);

  // sint32 Int16 = 5;
  void clear_int16();
  static const int kInt16FieldNumber = 5;
  ::google::protobuf::int32 int16() const;
  void set_int16(::google::protobuf::int32 value);

  // int32 UInt16 = 6;
  void clear_uint16();
  static const int kUInt16FieldNumber = 6;
  ::google::protobuf::int32 uint16() const;
  void set_uint16(::google::protobuf::int32 value);

  // sint32 Int32 = 7;
  void clear_int32();
  static const int kInt32FieldNumber = 7;
  ::google::protobuf::int32 int32() const;
  void set_int32(::google::protobuf::int32 value);

  // int32 UInt32 = 8;
  void clear_uint32();
  static const int kUInt32FieldNumber = 8;
  ::google::protobuf::int32 uint32() const;
  void set_uint32(::google::protobuf::int32 value);

  // sint64 Int64 = 9;
  void clear_int64();
  static const int kInt64FieldNumber = 9;
  ::google::protobuf::int64 int64() const;
  void set_int64(::google::protobuf::int64 value);

  // int64 UInt64 = 10;
  void clear_uint64();
  static const int kUInt64FieldNumber = 10;
  ::google::protobuf::int64 uint64() const;
  void set_uint64(::google::protobuf::int64 value);

  // double Double = 12;
  void clear_double_();
  static const int kDoubleFieldNumber = 12;
  double double_() const;
  void set_double_(double value);

  // float Float = 11;
  void clear_float_();
  static const int kFloatFieldNumber = 11;
  float float_() const;
  void set_float_(float value);

  // @@protoc_insertion_point(class_scope:NicSys_Hisd.psVariant)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::NicSys_Hisd::psTime* time_;
  int datatype_;
  ::google::protobuf::int32 bool__;
  ::google::protobuf::int32 int8_;
  ::google::protobuf::int32 uint8_;
  ::google::protobuf::int32 int16_;
  ::google::protobuf::int32 uint16_;
  ::google::protobuf::int32 int32_;
  ::google::protobuf::int32 uint32_;
  ::google::protobuf::int64 int64_;
  ::google::protobuf::int64 uint64_;
  double double__;
  float float__;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_NicSysRpc_2eproto;
};
// -------------------------------------------------------------------

class psData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NicSys_Hisd.psData) */ {
 public:
  psData();
  virtual ~psData();

  psData(const psData& from);

  inline psData& operator=(const psData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  psData(psData&& from) noexcept
    : psData() {
    *this = ::std::move(from);
  }

  inline psData& operator=(psData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const psData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const psData* internal_default_instance() {
    return reinterpret_cast<const psData*>(
               &_psData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(psData* other);
  friend void swap(psData& a, psData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline psData* New() const final {
    return CreateMaybeMessage<psData>(nullptr);
  }

  psData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<psData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const psData& from);
  void MergeFrom(const psData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(psData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .NicSys_Hisd.psTime Time = 1;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 1;
  const ::NicSys_Hisd::psTime& time() const;
  ::NicSys_Hisd::psTime* release_time();
  ::NicSys_Hisd::psTime* mutable_time();
  void set_allocated_time(::NicSys_Hisd::psTime* time);

  // .NicSys_Hisd.psVariant Value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::NicSys_Hisd::psVariant& value() const;
  ::NicSys_Hisd::psVariant* release_value();
  ::NicSys_Hisd::psVariant* mutable_value();
  void set_allocated_value(::NicSys_Hisd::psVariant* value);

  // int32 Quality = 3;
  void clear_quality();
  static const int kQualityFieldNumber = 3;
  ::google::protobuf::int32 quality() const;
  void set_quality(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NicSys_Hisd.psData)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::NicSys_Hisd::psTime* time_;
  ::NicSys_Hisd::psVariant* value_;
  ::google::protobuf::int32 quality_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_NicSysRpc_2eproto;
};
// -------------------------------------------------------------------

class psDataField : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NicSys_Hisd.psDataField) */ {
 public:
  psDataField();
  virtual ~psDataField();

  psDataField(const psDataField& from);

  inline psDataField& operator=(const psDataField& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  psDataField(psDataField&& from) noexcept
    : psDataField() {
    *this = ::std::move(from);
  }

  inline psDataField& operator=(psDataField&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const psDataField& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const psDataField* internal_default_instance() {
    return reinterpret_cast<const psDataField*>(
               &_psDataField_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(psDataField* other);
  friend void swap(psDataField& a, psDataField& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline psDataField* New() const final {
    return CreateMaybeMessage<psDataField>(nullptr);
  }

  psDataField* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<psDataField>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const psDataField& from);
  void MergeFrom(const psDataField& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(psDataField* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 Time = 1;
  void clear_time();
  static const int kTimeFieldNumber = 1;
  ::google::protobuf::int32 time() const;
  void set_time(::google::protobuf::int32 value);

  // int32 Value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  ::google::protobuf::int32 value() const;
  void set_value(::google::protobuf::int32 value);

  // int32 Quality = 3;
  void clear_quality();
  static const int kQualityFieldNumber = 3;
  ::google::protobuf::int32 quality() const;
  void set_quality(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NicSys_Hisd.psDataField)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::int32 value_;
  ::google::protobuf::int32 quality_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_NicSysRpc_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// psTime

// int32 Second = 1;
inline void psTime::clear_second() {
  second_ = 0;
}
inline ::google::protobuf::int32 psTime::second() const {
  // @@protoc_insertion_point(field_get:NicSys_Hisd.psTime.Second)
  return second_;
}
inline void psTime::set_second(::google::protobuf::int32 value) {
  
  second_ = value;
  // @@protoc_insertion_point(field_set:NicSys_Hisd.psTime.Second)
}

// int32 Millisec = 2;
inline void psTime::clear_millisec() {
  millisec_ = 0;
}
inline ::google::protobuf::int32 psTime::millisec() const {
  // @@protoc_insertion_point(field_get:NicSys_Hisd.psTime.Millisec)
  return millisec_;
}
inline void psTime::set_millisec(::google::protobuf::int32 value) {
  
  millisec_ = value;
  // @@protoc_insertion_point(field_set:NicSys_Hisd.psTime.Millisec)
}

// -------------------------------------------------------------------

// psVariant

// .NicSys_Hisd.psDataTypeEnum DataType = 1;
inline void psVariant::clear_datatype() {
  datatype_ = 0;
}
inline ::NicSys_Hisd::psDataTypeEnum psVariant::datatype() const {
  // @@protoc_insertion_point(field_get:NicSys_Hisd.psVariant.DataType)
  return static_cast< ::NicSys_Hisd::psDataTypeEnum >(datatype_);
}
inline void psVariant::set_datatype(::NicSys_Hisd::psDataTypeEnum value) {
  
  datatype_ = value;
  // @@protoc_insertion_point(field_set:NicSys_Hisd.psVariant.DataType)
}

// int32 Bool = 2;
inline void psVariant::clear_bool_() {
  bool__ = 0;
}
inline ::google::protobuf::int32 psVariant::bool_() const {
  // @@protoc_insertion_point(field_get:NicSys_Hisd.psVariant.Bool)
  return bool__;
}
inline void psVariant::set_bool_(::google::protobuf::int32 value) {
  
  bool__ = value;
  // @@protoc_insertion_point(field_set:NicSys_Hisd.psVariant.Bool)
}

// sint32 Int8 = 3;
inline void psVariant::clear_int8() {
  int8_ = 0;
}
inline ::google::protobuf::int32 psVariant::int8() const {
  // @@protoc_insertion_point(field_get:NicSys_Hisd.psVariant.Int8)
  return int8_;
}
inline void psVariant::set_int8(::google::protobuf::int32 value) {
  
  int8_ = value;
  // @@protoc_insertion_point(field_set:NicSys_Hisd.psVariant.Int8)
}

// int32 UInt8 = 4;
inline void psVariant::clear_uint8() {
  uint8_ = 0;
}
inline ::google::protobuf::int32 psVariant::uint8() const {
  // @@protoc_insertion_point(field_get:NicSys_Hisd.psVariant.UInt8)
  return uint8_;
}
inline void psVariant::set_uint8(::google::protobuf::int32 value) {
  
  uint8_ = value;
  // @@protoc_insertion_point(field_set:NicSys_Hisd.psVariant.UInt8)
}

// sint32 Int16 = 5;
inline void psVariant::clear_int16() {
  int16_ = 0;
}
inline ::google::protobuf::int32 psVariant::int16() const {
  // @@protoc_insertion_point(field_get:NicSys_Hisd.psVariant.Int16)
  return int16_;
}
inline void psVariant::set_int16(::google::protobuf::int32 value) {
  
  int16_ = value;
  // @@protoc_insertion_point(field_set:NicSys_Hisd.psVariant.Int16)
}

// int32 UInt16 = 6;
inline void psVariant::clear_uint16() {
  uint16_ = 0;
}
inline ::google::protobuf::int32 psVariant::uint16() const {
  // @@protoc_insertion_point(field_get:NicSys_Hisd.psVariant.UInt16)
  return uint16_;
}
inline void psVariant::set_uint16(::google::protobuf::int32 value) {
  
  uint16_ = value;
  // @@protoc_insertion_point(field_set:NicSys_Hisd.psVariant.UInt16)
}

// sint32 Int32 = 7;
inline void psVariant::clear_int32() {
  int32_ = 0;
}
inline ::google::protobuf::int32 psVariant::int32() const {
  // @@protoc_insertion_point(field_get:NicSys_Hisd.psVariant.Int32)
  return int32_;
}
inline void psVariant::set_int32(::google::protobuf::int32 value) {
  
  int32_ = value;
  // @@protoc_insertion_point(field_set:NicSys_Hisd.psVariant.Int32)
}

// int32 UInt32 = 8;
inline void psVariant::clear_uint32() {
  uint32_ = 0;
}
inline ::google::protobuf::int32 psVariant::uint32() const {
  // @@protoc_insertion_point(field_get:NicSys_Hisd.psVariant.UInt32)
  return uint32_;
}
inline void psVariant::set_uint32(::google::protobuf::int32 value) {
  
  uint32_ = value;
  // @@protoc_insertion_point(field_set:NicSys_Hisd.psVariant.UInt32)
}

// sint64 Int64 = 9;
inline void psVariant::clear_int64() {
  int64_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 psVariant::int64() const {
  // @@protoc_insertion_point(field_get:NicSys_Hisd.psVariant.Int64)
  return int64_;
}
inline void psVariant::set_int64(::google::protobuf::int64 value) {
  
  int64_ = value;
  // @@protoc_insertion_point(field_set:NicSys_Hisd.psVariant.Int64)
}

// int64 UInt64 = 10;
inline void psVariant::clear_uint64() {
  uint64_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 psVariant::uint64() const {
  // @@protoc_insertion_point(field_get:NicSys_Hisd.psVariant.UInt64)
  return uint64_;
}
inline void psVariant::set_uint64(::google::protobuf::int64 value) {
  
  uint64_ = value;
  // @@protoc_insertion_point(field_set:NicSys_Hisd.psVariant.UInt64)
}

// float Float = 11;
inline void psVariant::clear_float_() {
  float__ = 0;
}
inline float psVariant::float_() const {
  // @@protoc_insertion_point(field_get:NicSys_Hisd.psVariant.Float)
  return float__;
}
inline void psVariant::set_float_(float value) {
  
  float__ = value;
  // @@protoc_insertion_point(field_set:NicSys_Hisd.psVariant.Float)
}

// double Double = 12;
inline void psVariant::clear_double_() {
  double__ = 0;
}
inline double psVariant::double_() const {
  // @@protoc_insertion_point(field_get:NicSys_Hisd.psVariant.Double)
  return double__;
}
inline void psVariant::set_double_(double value) {
  
  double__ = value;
  // @@protoc_insertion_point(field_set:NicSys_Hisd.psVariant.Double)
}

// .NicSys_Hisd.psTime Time = 13;
inline bool psVariant::has_time() const {
  return this != internal_default_instance() && time_ != nullptr;
}
inline void psVariant::clear_time() {
  if (GetArenaNoVirtual() == nullptr && time_ != nullptr) {
    delete time_;
  }
  time_ = nullptr;
}
inline const ::NicSys_Hisd::psTime& psVariant::time() const {
  const ::NicSys_Hisd::psTime* p = time_;
  // @@protoc_insertion_point(field_get:NicSys_Hisd.psVariant.Time)
  return p != nullptr ? *p : *reinterpret_cast<const ::NicSys_Hisd::psTime*>(
      &::NicSys_Hisd::_psTime_default_instance_);
}
inline ::NicSys_Hisd::psTime* psVariant::release_time() {
  // @@protoc_insertion_point(field_release:NicSys_Hisd.psVariant.Time)
  
  ::NicSys_Hisd::psTime* temp = time_;
  time_ = nullptr;
  return temp;
}
inline ::NicSys_Hisd::psTime* psVariant::mutable_time() {
  
  if (time_ == nullptr) {
    auto* p = CreateMaybeMessage<::NicSys_Hisd::psTime>(GetArenaNoVirtual());
    time_ = p;
  }
  // @@protoc_insertion_point(field_mutable:NicSys_Hisd.psVariant.Time)
  return time_;
}
inline void psVariant::set_allocated_time(::NicSys_Hisd::psTime* time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete time_;
  }
  if (time) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, time, submessage_arena);
    }
    
  } else {
    
  }
  time_ = time;
  // @@protoc_insertion_point(field_set_allocated:NicSys_Hisd.psVariant.Time)
}

// -------------------------------------------------------------------

// psData

// .NicSys_Hisd.psTime Time = 1;
inline bool psData::has_time() const {
  return this != internal_default_instance() && time_ != nullptr;
}
inline void psData::clear_time() {
  if (GetArenaNoVirtual() == nullptr && time_ != nullptr) {
    delete time_;
  }
  time_ = nullptr;
}
inline const ::NicSys_Hisd::psTime& psData::time() const {
  const ::NicSys_Hisd::psTime* p = time_;
  // @@protoc_insertion_point(field_get:NicSys_Hisd.psData.Time)
  return p != nullptr ? *p : *reinterpret_cast<const ::NicSys_Hisd::psTime*>(
      &::NicSys_Hisd::_psTime_default_instance_);
}
inline ::NicSys_Hisd::psTime* psData::release_time() {
  // @@protoc_insertion_point(field_release:NicSys_Hisd.psData.Time)
  
  ::NicSys_Hisd::psTime* temp = time_;
  time_ = nullptr;
  return temp;
}
inline ::NicSys_Hisd::psTime* psData::mutable_time() {
  
  if (time_ == nullptr) {
    auto* p = CreateMaybeMessage<::NicSys_Hisd::psTime>(GetArenaNoVirtual());
    time_ = p;
  }
  // @@protoc_insertion_point(field_mutable:NicSys_Hisd.psData.Time)
  return time_;
}
inline void psData::set_allocated_time(::NicSys_Hisd::psTime* time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete time_;
  }
  if (time) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, time, submessage_arena);
    }
    
  } else {
    
  }
  time_ = time;
  // @@protoc_insertion_point(field_set_allocated:NicSys_Hisd.psData.Time)
}

// .NicSys_Hisd.psVariant Value = 2;
inline bool psData::has_value() const {
  return this != internal_default_instance() && value_ != nullptr;
}
inline void psData::clear_value() {
  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
}
inline const ::NicSys_Hisd::psVariant& psData::value() const {
  const ::NicSys_Hisd::psVariant* p = value_;
  // @@protoc_insertion_point(field_get:NicSys_Hisd.psData.Value)
  return p != nullptr ? *p : *reinterpret_cast<const ::NicSys_Hisd::psVariant*>(
      &::NicSys_Hisd::_psVariant_default_instance_);
}
inline ::NicSys_Hisd::psVariant* psData::release_value() {
  // @@protoc_insertion_point(field_release:NicSys_Hisd.psData.Value)
  
  ::NicSys_Hisd::psVariant* temp = value_;
  value_ = nullptr;
  return temp;
}
inline ::NicSys_Hisd::psVariant* psData::mutable_value() {
  
  if (value_ == nullptr) {
    auto* p = CreateMaybeMessage<::NicSys_Hisd::psVariant>(GetArenaNoVirtual());
    value_ = p;
  }
  // @@protoc_insertion_point(field_mutable:NicSys_Hisd.psData.Value)
  return value_;
}
inline void psData::set_allocated_value(::NicSys_Hisd::psVariant* value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete value_;
  }
  if (value) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    
  } else {
    
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:NicSys_Hisd.psData.Value)
}

// int32 Quality = 3;
inline void psData::clear_quality() {
  quality_ = 0;
}
inline ::google::protobuf::int32 psData::quality() const {
  // @@protoc_insertion_point(field_get:NicSys_Hisd.psData.Quality)
  return quality_;
}
inline void psData::set_quality(::google::protobuf::int32 value) {
  
  quality_ = value;
  // @@protoc_insertion_point(field_set:NicSys_Hisd.psData.Quality)
}

// -------------------------------------------------------------------

// psDataField

// int32 Time = 1;
inline void psDataField::clear_time() {
  time_ = 0;
}
inline ::google::protobuf::int32 psDataField::time() const {
  // @@protoc_insertion_point(field_get:NicSys_Hisd.psDataField.Time)
  return time_;
}
inline void psDataField::set_time(::google::protobuf::int32 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:NicSys_Hisd.psDataField.Time)
}

// int32 Value = 2;
inline void psDataField::clear_value() {
  value_ = 0;
}
inline ::google::protobuf::int32 psDataField::value() const {
  // @@protoc_insertion_point(field_get:NicSys_Hisd.psDataField.Value)
  return value_;
}
inline void psDataField::set_value(::google::protobuf::int32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:NicSys_Hisd.psDataField.Value)
}

// int32 Quality = 3;
inline void psDataField::clear_quality() {
  quality_ = 0;
}
inline ::google::protobuf::int32 psDataField::quality() const {
  // @@protoc_insertion_point(field_get:NicSys_Hisd.psDataField.Quality)
  return quality_;
}
inline void psDataField::set_quality(::google::protobuf::int32 value) {
  
  quality_ = value;
  // @@protoc_insertion_point(field_set:NicSys_Hisd.psDataField.Quality)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace NicSys_Hisd

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::NicSys_Hisd::psDataTypeEnum> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::NicSys_Hisd::psDataTypeEnum>() {
  return ::NicSys_Hisd::psDataTypeEnum_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_NicSysRpc_2eproto
