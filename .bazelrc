# +------------------------------------------------------------+
# | Startup Options                                            |
# +------------------------------------------------------------+
#startup --batch_cpu_scheduling

#startup --host_jvm_args=-XX:-UseParallelGC

# +------------------------------------------------------------+
# | Test Configurations                                        |
# +------------------------------------------------------------+

# By default prints output only from failed tests.
#test --test_output=errors

# Work around the sandbox issue.
#test --spawn_strategy=standalone

# Specify protobuf cc toolchain
#test --proto_toolchain_for_cc="@com_google_protobuf//:cc_toolchain"

# +------------------------------------------------------------+
# | CPP Lint Tests & Unit Tests                                |
# +------------------------------------------------------------+
# By default, cpplint tests are run as part of `bazel test` alongside all of
# the other compilation and test targets.  This is a convenience shortcut to
# only do the cpplint testing and nothing else.
# Do bazel test --config=cpplint <target> to enable this configuration.
# To enable the lint test, the BUILD *must* load the cpplint.bzl by having
# 'load("//tools:cpplint.bzl", "cpplint")' at the beginning and 'cpplint()'
# at the end.
#test:cpplint --test_tag_filters=cpplint
#test:cpplint --build_tests_only

# Regular unit tests.
#test:unit_test --test_tag_filters=-cpplint

# Coverage tests
#test:coverage --test_tag_filters=-cpplint
#test:coverage --copt=--coverage
#test:coverage --cxxopt=--coverage
#test:coverage --cxxopt=-fprofile-arcs
#test:coverage --cxxopt=-ftest-coverage
#test:coverage --linkopt=-coverage
#test:coverage --linkopt=-lgcov
#test:coverage --linkopt=-lgcc
#test:coverage --linkopt=-lc

# +------------------------------------------------------------+
# | Build Configurations                                       |
# +------------------------------------------------------------+
# Do not show warnings from external dependencies.
build --output_filter="^//"

build --show_timestamps

# Work around the sandbox issue.
build --spawn_strategy=standalone

build --compilation_mode=dbg

build --incompatible_disable_deprecated_attr_params=false



build --nokeep_state_after_build
# Specify protobuf cc toolchain
build --proto_toolchain_for_cc="@com_google_protobuf//:cc_toolchain"

# build with profiling
build:cpu_prof --linkopt=-lprofiler

#以下错误都为警告
build --copt="-Wconversion"
build --copt="-Werror=return-type"
#build --copt="-Werror=reorder"

build --copt="-Werror=unused-but-set-variable"
build --copt="-Werror=switch"

build --copt="-Wfloat-conversion"
build --copt="-Wunknown-pragmas"
#以下警告不为错误
build --copt="-Wno-sign-compare"
build --copt="-Wno-unused-variable"
build --copt="-Wno-unused-but-set-variable"


# Strict check on type conversion.
# build --per_file_copt=^modules/.*\.cc,^cyber/.*\.cc@-Werror=conversion, -Wsign-conversion


# Enable C++14
 build --cxxopt="-std=c++14"
# Enable colorful output of GCC
# build --cxxopt="-fdiagnostics-color=always"
