file(GLOB_RECURSE SOURCE_FILES *.cpp *.cu)
file(GLOB_RECURSE HEADER_FILES *.h *.hpp)
#file(GLOB_RECURSE HEADER_FILES ${CMAKE_CURRENT_SOURCE_DIR}/*.h)

cuda_add_library(${ALGORITHM_TARGET}
	${HEADER_FILES}
	${SOURCE_FILES}
)

target_link_libraries (${ALGORITHM_TARGET}
    ${Boost_LIBRARIES}
	${GLOG_LIBRARIES}

	${OpenCV_LIBRARIES}
	${Caffe_LIBRARIES}
	${dlib_LIBRARIES}
	${MLPACK_LIBRARIES}

	${TORCH_LIBRARIES}
	${PCL_LIBRARIES}
)

#install(TARGETS ${ALGORITHM_TARGET}
#	RUNTIME DESTINATION bin
#	LIBRARY DESTINATION lib
#	ARCHIVE DESTINATION lib/static
#)

set_target_properties(${ALGORITHM_TARGET}  PROPERTIES INSTALL_RPATH_USE_LINK_PATH TRUE)


if(WIN32)
	install(TARGETS ${ALGORITHM_TARGET} EXPORT "${PACKAGE_FOLDER_NAME}-config" 
		RUNTIME DESTINATION bin # .dll 
		ARCHIVE DESTINATION lib # .lib
	)
	
	#install(EXPORT "${PACKAGE_FOLDER_NAME}-config" DESTINATION "lib/cmake/${PACKAGE_FOLDER_NAME}/")
else()
	install(TARGETS ${ALGORITHM_TARGET} EXPORT "${PACKAGE_FOLDER_NAME}-config" 
		LIBRARY DESTINATION lib #.so
	)
	
	#install(EXPORT "${PACKAGE_FOLDER_NAME}-config" DESTINATION "lib/cmake/${PACKAGE_FOLDER_NAME}/")
endif()  

install(FILES "${PACKAGE_FILE}" DESTINATION "lib/cmake/${PACKAGE_FOLDER_NAME}/")
