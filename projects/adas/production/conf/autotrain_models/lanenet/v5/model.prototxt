name: "VGGFCN"

layer {
  name: "data"
  type: "Input"
  top: "data"
  # batch size, channel, width, height
  input_param { 
    shape: {
    	dim: 1 dim: 3 dim: 1024 dim: 256 
	} 
  }
}
layer {
  name: "conv1_1"
  type: "Convolution" 
  bottom: "data"
  top: "conv1_1"
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    bias_term: false
  }
}  
layer {
  name: "conv1_1/relu"
  type: "ReLU"
  bottom: "conv1_1"
  top: "conv1_1/relu"
}
layer {
  name: "conv1_2"
  type: "Convolution"
  bottom: "conv1_1/relu"
  top: "conv1_2"
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    bias_term: false
  }
}
layer {
  name: "conv1_2/relu"
  type: "ReLU"
  bottom: "conv1_2"
  top: "conv1_2/relu"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1_2/relu"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2_1"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2_1"
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    bias_term: false
  }
}
layer {
  name: "conv2_1/relu"
  type: "ReLU"
  bottom: "conv2_1"
  top: "conv2_1/relu"
}
layer {
  name: "conv2_2"
  type: "Convolution"
  bottom: "conv2_1/relu"
  top: "conv2_2"
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    bias_term: false
  }
}
layer {
  name: "conv2_2/relu"
  type: "ReLU"
  bottom: "conv2_2"
  top: "conv2_2/relu"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2_2/relu"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3_1"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3_1"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    bias_term: false
  }
}
layer {
  name: "relu3_1/relu"
  type: "ReLU"
  bottom: "conv3_1"
  top: "conv3_1/relu"
}
layer {
  name: "conv3_2"
  type: "Convolution"
  bottom: "conv3_1/relu"
  top: "conv3_2"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    bias_term: false
  }
}
layer {
  name: "conv3_2/relu"
  type: "ReLU"
  bottom: "conv3_2"
  top: "conv3_2/relu"
}
layer {
  name: "conv3_3"
  type: "Convolution"
  bottom: "conv3_2/relu"
  top: "conv3_3"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    bias_term: false
  }
}
layer {
  name: "conv3_3/relu"
  type: "ReLU"
  bottom: "conv3_3"
  top: "conv3_3/relu"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3_3/relu"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4_1"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4_1"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    bias_term: false
  }
}
layer {
  name: "conv4_1/relu"
  type: "ReLU"
  bottom: "conv4_1"
  top: "conv4_1/relu"
}
layer {
  name: "conv4_2"
  type: "Convolution"
  bottom: "conv4_1/relu"
  top: "conv4_2"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    bias_term: false
  }
}
layer {
  name: "conv4_2/relu"
  type: "ReLU"
  bottom: "conv4_2"
  top: "conv4_2/relu"
}
layer {
  name: "conv4_3"
  type: "Convolution"
  bottom: "conv4_2/relu"
  top: "conv4_3"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    bias_term: false
  }
}
layer {
  name: "conv4_3/relu"
  type: "ReLU"
  bottom: "conv4_3"
  top: "conv4_3/relu"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4_3/relu"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv5_1"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5_1"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    bias_term: false
  }
}
layer {
  name: "conv5_1/relu"
  type: "ReLU"
  bottom: "conv5_1"
  top: "conv5_1/relu"
}
layer {
  name: "conv5_2"
  type: "Convolution"
  bottom: "conv5_1/relu"
  top: "conv5_2"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    bias_term: false
  }
}
layer {
  name: "conv5_2/relu"
  type: "ReLU"
  bottom: "conv5_2"
  top: "conv5_2/relu"
}
layer {
  name: "conv5_3"
  type: "Convolution"
  bottom: "conv5_2/relu"
  top: "conv5_3"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    bias_term: false
  }
}
layer {
  name: "conv5_3/relu"
  type: "ReLU"
  bottom: "conv5_3"
  top: "conv5_3/relu"
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5_3/relu"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "score_origin"
  type: "Convolution"
  bottom: "pool5"
  top: "score_origin"
  convolution_param {
    num_output: 64
    kernel_size: 1
    engine: CAFFE
    bias_term: false	
  }
}
layer {
  name: "upscore1"
  type: "Deconvolution"
  bottom: "score_origin"
  top: "upscore1"
  convolution_param {
    num_output: 64
    kernel_size: 4
    stride: 2
	pad: 1
    bias_term: false
  }
}
layer {
  name: "p4/score"
  type: "Convolution"
  bottom: "pool4"
  top: "p4/score"
  convolution_param {
    num_output: 64
    kernel_size: 1
    engine: CAFFE
    bias_term: false
  }
}
layer {
  name: "upscore1/fuse"
  type: "Eltwise"
  bottom: "upscore1"
  bottom: "p4/score"
  top: "upscore1/fuse"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "upscore2"
  type: "Deconvolution"
  bottom: "upscore1/fuse"
  top: "upscore2"
  convolution_param {
    num_output: 64
    kernel_size: 4
    stride: 2
	pad: 1
    bias_term: false
  }
}
layer {
  name: "p3/score"
  type: "Convolution"
  bottom: "pool3"
  top: "p3/score"
  convolution_param {
    num_output: 64
    kernel_size: 1
    engine: CAFFE
    bias_term: false
  }
}
layer {
  name: "upscore2/fuse"
  type: "Eltwise"
  bottom: "upscore2"
  bottom: "p3/score"
  top: "upscore2/fuse"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "deconv_final"
  type: "Deconvolution"
  bottom: "upscore2/fuse"
  top: "deconv_final"
  convolution_param {
    num_output: 64
    bias_term: false
    kernel_size: 16
    stride: 8
	pad: 4
  }
}
layer {
  name: "score_final"
  type: "Convolution"
  bottom: "deconv_final"
  top: "score_final"
  convolution_param {
    num_output: 2
    kernel_size: 1
    engine: CAFFE
    bias_term: false
  }
}
layer {
  name: "embedding_conv"
  type: "Convolution"
  bottom: "deconv_final"
  top: "embedding_conv"
  convolution_param {
    num_output: 8
    kernel_size: 1
    engine: CAFFE
    bias_term: false
  }
}
