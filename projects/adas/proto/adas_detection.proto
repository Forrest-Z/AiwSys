syntax = "proto2";

package aiwsys.projects.adas.proto;

import "modules/common/proto/error_code.proto";
import "modules/common/proto/geometry.proto";
import "modules/common/proto/header.proto";
import "modules/drivers/proto/sensor_image.proto";

message PluginParam {
  optional string name = 1;
  optional string root_dir = 2;
  optional string config_file = 3;
}

message DetectorParam {
  optional PluginParam plugin_param = 1;
  optional string camera_name = 2;
  optional int32 gpu_id = 3;
}


message DetectionBox {
  optional uint32 xmin = 1;
  optional uint32 ymin = 2;
  optional uint32 xmax = 3;
  optional uint32 ymax = 4;
  optional float confidence = 5;
  optional uint32 class_index = 6;
  optional bytes class_name = 7;
  optional  apollo.common.Point3D distance = 8;  // for image distance
  optional int32 invasion_status = 9;
  optional float invasion_distance = 10;
}


// for 1 image, we get 1 DetectionBoxs (N DetectionBox)
message DetectionBoxs {
  repeated DetectionBox boxs = 1; 
}

message ObjectsDistance {
  optional int32 object_distance = 1; 
}

message CameraImages {
  repeated apollo.drivers.Image images = 1; 
}


message YoloDetectionResult {
  optional apollo.drivers.Image  source_image = 1;
  optional DetectionBoxs detection_boxs = 2;
}

message LidarImageResult {
  optional apollo.drivers.Image  lidar_image = 1; 
  optional uint64 timestamp_msec = 2;  
}

message SyncCameraResult {
  optional CameraImages sync_images = 1; 
  optional uint64 timestamp_msec = 2;  
}

message MaxSafeDistance {
  optional int32 image_distance = 1;
  repeated ObjectsDistance lidar_distance = 2;
}


  message SyncPerceptionResult {
    optional apollo.common.Header header = 1;                    // Header
    optional apollo.common.ErrorCode error_code = 2 [default = OK];
    optional CameraImages source_images = 3; 
    optional CameraImages lane_binary_masks = 4; 
    optional DetectionBoxs detection_boxs1 = 5; 
    optional DetectionBoxs detection_boxs2 = 6;
    optional MaxSafeDistance max_safe_distance = 7; 
  }
  